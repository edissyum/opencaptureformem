#!/bin/bash
# This file is part of Open-Capture For MEM Courrier.

# Open-Capture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Open-Capture For MEM Courrier is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Open-Capture For MEM Courrier.  If not, see <https://www.gnu.org/licenses/>.

# @dev : Nathan Cheval <nathan.cheval@outlook.fr>
# @dev : Pierre-Yvon Bezert <pierreyvon.bezert@edissyum.com>

script="OUT"
process="outgoing"
# Made 14 char for name, to have the same layout in log as OC application
# Made 31 char for filename, to have the same layout in log as OC application
spaces="              "
name="$script.sh"
name=${name:0:14}${spaces:0:$((14-${#name}))}

spaces="                               "
scriptName="launch_$script.sh"
scriptName=${scriptName:0:31}${spaces:0:$((31-${#scriptName}))}

OCPath="/opt/mem/opencapture/"
config_file="$OCPath"/src/config/config.ini
logFile="$OCPath"/data/log/OCForMEM.log
errFilepath="$OCPath/data/error/$script/"
tmpFilepath="$OCPath/data/pdf/"
PID=/tmp/securite-$script-$$.pid

echo "[$name] [$scriptName] $(date +"%d-%m-%Y %T") INFO Launching $script script" >> "$logFile"

filepath=$1
filename=$(basename "$filepath")
destination=$(basename "$(dirname "$filepath")")
ext=$(file -b --mime-type "$filepath")

§§PYTHON_VENV§§

if ! test -e $PID && test "$ext" = 'application/pdf' && test -f "$filepath";
then
  touch $PID
  echo $$ > $PID
  echo "[$name] [$scriptName] $(date +"%d-%m-%Y %T") INFO $filepath is a valid file and PID file created" >> "$logFile"
  mv "$filepath" "$tmpFilepath"

  python3 "$OCPath"/launch_worker.py -c "$config_file" -f "$tmpFilepath"/"$filename" --destination "$destination" --process "$process" --keep-pdf-debug false

elif test -f "$filepath" && test "$ext" != 'application/pdf';
then
  echo "[$name] [$scriptName] $(date +"%d-%m-%Y %T") ERROR $filename is a not valid PDF file" >> "$logFile"
  mkdir -p "$errFilepath"
  mv "$filepath" "$errFilepath"
elif test -d "$filepath";
then
  echo "[$name] [$scriptName] $(date +"%d-%m-%Y %T") INFO $filepath is a directory. Do not process it" >> "$logFile"
else
  echo "[$name] [$scriptName] $(date +"%d-%m-%Y %T") WARNING capture on $filepath already active : PID exists : $PID" >> "$logFile"
fi

rm -f $PID